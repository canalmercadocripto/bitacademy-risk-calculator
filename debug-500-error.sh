#!/bin/bash

echo "üîç DIAGN√ìSTICO DE ERRO 500 - BITACADEMY CALCULATOR"
echo "================================================="

echo ""
echo "1. üìä Status dos Servi√ßos"
echo "------------------------"

echo "PM2 Status:"
pm2 status

echo ""
echo "Nginx Status:"
systemctl status nginx --no-pager -l | head -10

echo ""
echo "2. üîç Logs do Backend (PM2)"
echo "--------------------------"
echo "√öltimas 20 linhas dos logs do backend:"
pm2 logs bitacademy-calculator --lines 20

echo ""
echo "3. üåê Logs do Nginx"
echo "------------------"
echo "√öltimas 10 linhas do log de erro do Nginx:"
tail -10 /var/log/nginx/bitacademy-calculator.error.log 2>/dev/null || echo "Arquivo de log n√£o encontrado"

echo ""
echo "√öltimas 5 linhas do log de acesso do Nginx:"
tail -5 /var/log/nginx/bitacademy-calculator.access.log 2>/dev/null || echo "Arquivo de log n√£o encontrado"

echo ""
echo "4. üß™ Testes de Conectividade"
echo "-----------------------------"

echo "Testando backend diretamente:"
BACKEND_RESPONSE=$(curl -s -w "%{http_code}" http://localhost:3001/health -o /tmp/backend_response.txt)
echo "Status Code: $BACKEND_RESPONSE"
echo "Response: $(cat /tmp/backend_response.txt)"

echo ""
echo "Testando API via Nginx:"
API_RESPONSE=$(curl -s -w "%{http_code}" http://calculadora.bitacademy.vip/api/health -o /tmp/api_response.txt)
echo "Status Code: $API_RESPONSE"
echo "Response: $(cat /tmp/api_response.txt)"

echo ""
echo "Testando frontend:"
FRONTEND_RESPONSE=$(curl -s -w "%{http_code}" http://calculadora.bitacademy.vip -o /tmp/frontend_response.txt)
echo "Status Code: $FRONTEND_RESPONSE"
echo "Response (primeiras 200 chars): $(head -c 200 /tmp/frontend_response.txt)"

echo ""
echo "5. üóÑÔ∏è Verifica√ß√£o do Banco de Dados"
echo "-----------------------------------"

cd /var/www/bitacademy-calculator/backend 2>/dev/null || cd /var/www/bitacademy-calculator/backend

if [ -f "bitacademy.db" ]; then
    echo "Banco de dados encontrado:"
    ls -la bitacademy.db
    
    echo ""
    echo "Testando conex√£o com o banco:"
    node -e "
    const sqlite3 = require('sqlite3').verbose();
    const db = new sqlite3.Database('bitacademy.db');
    
    db.all('.tables', [], (err, tables) => {
      if (err) {
        console.log('‚ùå Erro ao conectar:', err.message);
      } else {
        console.log('‚úÖ Conectado ao banco');
      }
      db.close();
    });
    "
    
    echo ""
    echo "Verificando tabelas:"
    sqlite3 bitacademy.db ".tables" 2>/dev/null || echo "‚ùå Erro ao verificar tabelas"
    
    echo ""
    echo "Contando usu√°rios:"
    sqlite3 bitacademy.db "SELECT COUNT(*) as total_users FROM users;" 2>/dev/null || echo "‚ùå Tabela users n√£o existe"
    
else
    echo "‚ùå Banco de dados n√£o encontrado!"
fi

echo ""
echo "6. üìÅ Verifica√ß√£o de Arquivos"
echo "-----------------------------"

echo "Estrutura de diret√≥rios:"
if [ -d "/var/www/bitacademy-calculator" ]; then
    echo "‚úÖ Diret√≥rio principal existe"
    
    if [ -f "/var/www/bitacademy-calculator/backend/server.js" ]; then
        echo "‚úÖ Backend server.js existe"
    else
        echo "‚ùå Backend server.js n√£o existe"
    fi
    
    if [ -d "/var/www/bitacademy-calculator/frontend/build" ]; then
        echo "‚úÖ Frontend build existe"
        echo "   Arquivos no build:"
        ls -la /var/www/bitacademy-calculator/frontend/build/ | head -5
    else
        echo "‚ùå Frontend build n√£o existe"
    fi
    
    if [ -f "/var/www/bitacademy-calculator/backend/.env" ]; then
        echo "‚úÖ Arquivo .env existe"
        echo "   Conte√∫do do .env:"
        cat /var/www/bitacademy-calculator/backend/.env
    else
        echo "‚ùå Arquivo .env n√£o existe"
    fi
    
else
    echo "‚ùå Diret√≥rio principal n√£o existe!"
fi

echo ""
echo "7. üîß Configura√ß√£o do Nginx"
echo "---------------------------"

echo "Configura√ß√£o ativa:"
if [ -f "/etc/nginx/sites-available/bitacademy-calculator" ]; then
    echo "‚úÖ Configura√ß√£o existe"
    echo "Testando configura√ß√£o:"
    nginx -t
    
    echo ""
    echo "Verificando se est√° ativada:"
    if [ -L "/etc/nginx/sites-enabled/bitacademy-calculator" ]; then
        echo "‚úÖ Configura√ß√£o ativada"
    else
        echo "‚ùå Configura√ß√£o n√£o ativada"
    fi
else
    echo "‚ùå Configura√ß√£o n√£o existe"
fi

echo ""
echo "8. üîß Tentativa de Corre√ß√£o R√°pida"
echo "=================================="

echo "Reiniciando backend..."
pm2 restart bitacademy-calculator 2>/dev/null

echo "Aguardando 5 segundos..."
sleep 5

echo ""
echo "Testando novamente:"
FINAL_TEST=$(curl -s -w "%{http_code}" http://localhost:3001/health -o /tmp/final_test.txt)
echo "Backend Status: $FINAL_TEST"
echo "Response: $(cat /tmp/final_test.txt)"

if [ "$FINAL_TEST" = "200" ]; then
    echo "‚úÖ Backend funcionando!"
    
    echo "Testando via Nginx:"
    NGINX_TEST=$(curl -s -w "%{http_code}" http://calculadora.bitacademy.vip/api/health -o /tmp/nginx_test.txt)
    echo "Nginx Status: $NGINX_TEST"
    echo "Response: $(cat /tmp/nginx_test.txt)"
    
    if [ "$NGINX_TEST" = "200" ]; then
        echo "‚úÖ Tudo funcionando!"
    else
        echo "‚ùå Problema no Nginx"
    fi
else
    echo "‚ùå Backend com problemas"
fi

echo ""
echo "9. üìã Resumo do Diagn√≥stico"
echo "==========================="

if [ "$FINAL_TEST" = "200" ]; then
    echo "üéâ Status: FUNCIONANDO"
    echo "üåê Acesse: http://calculadora.bitacademy.vip"
else
    echo "‚ùå Status: COM PROBLEMAS"
    echo ""
    echo "üîß Poss√≠veis solu√ß√µes:"
    echo "   1. Execute: pm2 restart bitacademy-calculator"
    echo "   2. Execute: systemctl restart nginx"
    echo "   3. Verifique: pm2 logs bitacademy-calculator"
    echo "   4. Verifique: tail -f /var/log/nginx/error.log"
    echo "   5. Se persistir, execute o script de atualiza√ß√£o for√ßada"
fi

echo ""
echo "üîç Para mais detalhes, execute:"
echo "   pm2 logs bitacademy-calculator --lines 50"
echo "   tail -50 /var/log/nginx/error.log"