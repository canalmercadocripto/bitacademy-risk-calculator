#!/bin/bash

# Script para atualizar produ√ß√£o a partir do GitHub
echo "üöÄ Atualizando aplica√ß√£o em produ√ß√£o..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Execute este script a partir do diret√≥rio raiz do projeto${NC}"
    exit 1
fi

# Verificar se √© um reposit√≥rio git
if [ ! -d ".git" ]; then
    echo -e "${RED}‚ùå Este n√£o √© um reposit√≥rio Git. Execute primeiro o deploy-to-github.sh${NC}"
    exit 1
fi

# Fazer backup dos arquivos de configura√ß√£o sens√≠veis
echo -e "${YELLOW}üíæ Fazendo backup de configura√ß√µes...${NC}"
cp backend/.env backend/.env.backup 2>/dev/null || true
cp /etc/nginx/sites-available/bitacademy /tmp/nginx-bitacademy.backup 2>/dev/null || true

# Parar aplica√ß√£o
echo -e "${YELLOW}‚èπÔ∏è Parando aplica√ß√£o...${NC}"
pm2 stop all

# Atualizar c√≥digo do GitHub
echo -e "${YELLOW}üì• Baixando atualiza√ß√µes do GitHub...${NC}"
git fetch origin
git reset --hard origin/main

# Restaurar arquivos de configura√ß√£o
echo -e "${YELLOW}üîß Restaurando configura√ß√µes...${NC}"
cp backend/.env.backup backend/.env 2>/dev/null || true

# Verificar se arquivo .env existe
if [ ! -f "backend/.env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è Criando arquivo .env a partir do exemplo...${NC}"
    cp .env.example backend/.env
    echo -e "${BLUE}üìù Edite o arquivo backend/.env com suas configura√ß√µes${NC}"
    echo "Arquivo criado com configura√ß√µes padr√£o. Revise se necess√°rio."
fi

# Atualizar depend√™ncias do backend
echo -e "${YELLOW}üì¶ Atualizando depend√™ncias do backend...${NC}"
cd backend
npm install --production
cd ..

# Atualizar e construir frontend
echo -e "${YELLOW}üé® Construindo novo frontend...${NC}"
cd frontend
npm install
npm run build
cd ..

# Verificar se o build foi criado
if [ ! -d "frontend/build" ]; then
    echo -e "${RED}‚ùå Falha ao construir frontend${NC}"
    exit 1
fi

# Copiar build para diret√≥rio do nginx
echo -e "${YELLOW}üìÅ Atualizando arquivos est√°ticos...${NC}"
sudo rm -rf /var/www/bitacademy/*
sudo cp -r frontend/build/* /var/www/bitacademy/
sudo chown -R www-data:www-data /var/www/bitacademy

# Testar configura√ß√£o do nginx
echo -e "${YELLOW}üîç Testando configura√ß√£o do nginx...${NC}"
nginx -t
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erro na configura√ß√£o do nginx${NC}"
    echo "Restaurando backup..."
    sudo cp /tmp/nginx-bitacademy.backup /etc/nginx/sites-available/bitacademy 2>/dev/null || true
    exit 1
fi

# Reiniciar nginx
echo -e "${YELLOW}üîÑ Reiniciando nginx...${NC}"
sudo systemctl reload nginx

# Iniciar aplica√ß√£o
echo -e "${YELLOW}‚ñ∂Ô∏è Iniciando aplica√ß√£o...${NC}"
pm2 start ecosystem.config.js

# Aguardar inicializa√ß√£o
sleep 5

# Verificar status
echo -e "${YELLOW}üìä Verificando status dos servi√ßos...${NC}"
pm2 status

# Teste de sa√∫de
echo -e "${YELLOW}üè• Teste de sa√∫de...${NC}"
HEALTH_CHECK=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/health)

if [ "$HEALTH_CHECK" = "200" ]; then
    echo -e "${GREEN}‚úÖ Backend funcionando corretamente${NC}"
else
    echo -e "${RED}‚ùå Backend com problemas (HTTP $HEALTH_CHECK)${NC}"
    echo "Verificando logs:"
    pm2 logs --lines 10
fi

# Verificar se frontend est√° sendo servido
FRONTEND_CHECK=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/)

if [ "$FRONTEND_CHECK" = "200" ]; then
    echo -e "${GREEN}‚úÖ Frontend funcionando corretamente${NC}"
else
    echo -e "${RED}‚ùå Frontend com problemas (HTTP $FRONTEND_CHECK)${NC}"
fi

# Salvar processos PM2
pm2 save

# Limpar backups antigos
rm -f backend/.env.backup

echo ""
echo -e "${GREEN}üéâ Atualiza√ß√£o conclu√≠da!${NC}"
echo ""
echo -e "${BLUE}üìã Status dos servi√ßos:${NC}"
echo "‚Ä¢ Backend: http://localhost:3001"
echo "‚Ä¢ Frontend: http://localhost"
echo "‚Ä¢ PM2 Status: $(pm2 list | grep -c online) processos online"
echo ""
echo -e "${BLUE}üîó Acesse sua aplica√ß√£o:${NC}"
echo "‚Ä¢ Site: https://calculadora.bitacademy.vip"
echo "‚Ä¢ API: https://calculadora.bitacademy.vip/api/exchanges"
echo ""
echo -e "${YELLOW}üí° Comandos √∫teis:${NC}"
echo "‚Ä¢ pm2 status       - Ver status dos processos"
echo "‚Ä¢ pm2 logs         - Ver logs em tempo real"
echo "‚Ä¢ pm2 restart all  - Reiniciar todos os processos"
echo "‚Ä¢ nginx -t         - Testar configura√ß√£o do nginx"